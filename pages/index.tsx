import type { NextPage } from "next";
import Head from "next/head";
import { GetStaticProps } from "next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import { useTranslation } from "next-i18next";
import { useRouter } from "next/router";
import { useEffect } from "react";

const Home: NextPage = () => {
  const router = useRouter();
  const { t } = useTranslation("common");
  const { pathname, asPath, query, locale } = router;

  useEffect(() => {
    console.log("my locale == ", locale);
  }, [locale]);

  const localeChanger = (newLocale: string) => {
    const tempLocal = router.push({ pathname, query }, asPath, {
      locale: newLocale,
    });
  };
  return (
    <div className={`${locale === "ja" ? "font-ja" : "font-en"}`}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-[500px] h-[200px] mt-40 mx-auto">
        <div className="flex justify-end mb-20 font-en">
          <p
            className="cursor-pointer mx-2"
            onClick={() => localeChanger("en")}
          >
            EN
          </p>
          <p
            className="cursor-pointer mx-2"
            onClick={() => localeChanger("ja")}
          >
            JA
          </p>
        </div>
        <div className="">
          <p className="">{t("example1")}</p>
          <p className="">{t("example2")}</p>
          <p className="">{t("example3")}</p>
        </div>
      </main>

      <footer className="w-[500px] mx-auto">
        <p className="mb-10">This paragraph is concrete, but it is in different fonts.</p>
        <p className="font-en">And you can have concrente fonts too.</p>
      </footer>
    </div>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale ? locale : "en", ["common"])),
    },
  };
};
